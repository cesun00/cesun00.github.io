<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java Standard SDK on Infinity Architect</title><link>https://cesun.info/java/jdk/</link><description>Recent content in Java Standard SDK on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/java/jdk/index.xml" rel="self" type="application/rss+xml"/><item><title>Memo: Java Datetime-Related SDK</title><link>https://cesun.info/java/jdk/time/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/jdk/time/</guid><description>&lt;p>Datetime-related SDKs.&lt;/p></description></item><item><title>Memo: using `java.util` Collections</title><link>https://cesun.info/java/jdk/collection/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/jdk/collection/</guid><description>null key in java.util.Map Map.put doesn&amp;rsquo;t &amp;ldquo;throws&amp;rdquo; checked exception, but runtime exceptions e.g. NPE may be thrown depending on whether the underlying implementation supports null as key.
TreeMap doesn&amp;rsquo;t support null key, since it&amp;rsquo;s red-black tree based on comparison. Compare null with non-null reference doesn&amp;rsquo;t make much sense.
1public class App5 { 2 public static void main(String[] args) { 3 Map&amp;lt;String, String&amp;gt; m =new HashMap&amp;lt;&amp;gt;(); 4 m.put(null, &amp;#34;123&amp;#34;); // HashMap supports null key as if it hash to 0 5 System.</description></item><item><title>Class loading &amp; The `java.lang.ClassLoader`</title><link>https://cesun.info/java/jdk/class-loading/</link><pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/jdk/class-loading/</guid><description>A class loader is an object responsible for creating Class&amp;lt;?&amp;gt; instances by the binary name of a class. The class of such object must be a subclass of the abstract class java.lang.ClassLoader. Among others, the most important API is public Class&amp;lt;?&amp;gt; loadClass(String name) which converts an array of bytes into an instance of Class&amp;lt;?&amp;gt;.
First, bootstrap classes (was rt.jar prior to java 9) was found by looking at system property sun.</description></item></channel></rss>