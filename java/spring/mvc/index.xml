<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Series: Spring MVC on Infinity Architect</title><link>https://cesun.info/java/spring/mvc/</link><description>Recent content in Series: Spring MVC on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 22 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/java/spring/mvc/index.xml" rel="self" type="application/rss+xml"/><item><title>Minimal Spring MVC Application</title><link>https://cesun.info/java/spring/mvc/minimal-mvc/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/spring/mvc/minimal-mvc/</guid><description>This is a quick example of how to start a minimalistic Java Web application with Spring MVC. We will stick to the vanilla workflow of Jakarta EE as possible, and just demonstrate how Spring MVC gets into the picture, without introducing unnecessary complexity from redundant Spring components. This example can also serve as a good starting point for studying the underlying mechanics of Spring MVC or Spring framework.
As with classic JEE applications, you&amp;rsquo;ll need to build the project as a war file and deploy it to Tomcat or a servlet container of your choice.</description></item><item><title/><link>https://cesun.info/java/spring/mvc/request-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cesun.info/java/spring/mvc/request-flow/</guid><description>org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite#handleReturnValue This is where HttpMessageConverter&amp;lt;&amp;gt;s comes in:</description></item></channel></rss>