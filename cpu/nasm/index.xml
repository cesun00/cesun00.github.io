<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Netwide Assembler on Infinity Architect</title><link>https://cesun.info/cpu/nasm/</link><description>Recent content in The Netwide Assembler on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 19 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/cpu/nasm/index.xml" rel="self" type="application/rss+xml"/><item><title>Preprocessor</title><link>https://cesun.info/cpu/nasm/preprocessor/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://cesun.info/cpu/nasm/preprocessor/</guid><description>%define for single-line macro %macro ... %endmacro for multi-instructions macro %define is not very useful when you need a macro that expands to multiple instructions. Use %macro for that:
%macro macro_name num_of_args [default args values] ; arguments are referred to by %1, %2, %3, etc. ; %0 expands to the number of arguments, a compile-time constant %endmacro copy where num_of_args takes the form x-y, meaning that at least x arguments must be provided</description></item><item><title>Overview to The Netwide Assembler</title><link>https://cesun.info/cpu/nasm/overview/</link><pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/cpu/nasm/overview/</guid><description>NASM is an assembler for x86 and AMD64 architecture.
CLI invocation 1nasm -f FORMAT -o OUTPUT_FILE source.asm copy nasm assembles each .asm file to an object file, which is later linked by a linker e.g. GNU ld. See nasm -h for a list of supported FORAMT. For modern *NIX you almost always want to use -f elf64. If -o is not specified,
Programming nasm is line oriented. The precense of LF in the source is significant for a successful assembling.</description></item></channel></rss>