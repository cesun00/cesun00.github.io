<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SLF4J on Infinity Architect</title><link>https://cesun.info/tags/slf4j/</link><description>Recent content in SLF4J on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/tags/slf4j/index.xml" rel="self" type="application/rss+xml"/><item><title>SLF4J and Backends</title><link>https://cesun.info/java/slf4j/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/slf4j/</guid><description>SLF4j org.slf4j:slf4j-api provides APIs directly used by end user.
For each facaded logging framework, an adapter package, known as the &amp;ldquo;SLF4J binding&amp;rdquo;, is required to present on the classpath (and discovered later via SPI). If no one is found, slf4j defaults to a no-op implementation and emit a warning to stderr.
Do not place more than one binding on your (runtime) class path.
and here goes the chaos:
org.slf4j:slf4j-log4j12, maintained by slf4j, was the binding for log4j &amp;lt;= 1.</description></item></channel></rss>