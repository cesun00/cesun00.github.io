<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GC on Infinity Architect</title><link>https://cesun.info/tags/gc/</link><description>Recent content in GC on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 28 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/tags/gc/index.xml" rel="self" type="application/rss+xml"/><item><title>Garbage Collection</title><link>https://cesun.info/java/jvm/gc/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/java/jvm/gc/</guid><description>ℹ️ Warning The garbage collection mechanism is BY NO MEANS standardized. JVM vendors are free to choose any GC algorithms, to the extent of having on GC at all.
Overview The good old garbage collectors for HotSpot is &amp;ldquo;Serial Garbage Collector&amp;rdquo; and &amp;ldquo;Parallel Garbage Collector&amp;rdquo;. The latter one is default in and before Java 8, and is recommended on devices that has multiple hardware threads. Since Java 9, Hotspot switch to the &amp;ldquo;Garbage First Garbage Collector (G1GC)&amp;rdquo; as the default garbage collector.</description></item></channel></rss>