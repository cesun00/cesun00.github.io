<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Clang on Infinity Architect</title><link>https://cesun.info/tags/clang/</link><description>Recent content in Clang on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 18 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/tags/clang/index.xml" rel="self" type="application/rss+xml"/><item><title>The clang-format Formatter</title><link>https://cesun.info/cxx/clang/clang-format/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cesun.info/cxx/clang/clang-format/</guid><description>1clang-format [options] &amp;lt;source files ...&amp;gt; copy Supported coding style preset: LLVM, GNU, Google, Chromium, Microsoft, Mozilla, WebKit
ClangFormat respects a collection of format options, whose fallback values are specified by --fallback-style= options, which defaults to LLVM.
These format options are further overridden depending on the value of --style= CLI option, which defaults to file if omitted:
file: file .clang-format is searched in the containing directories of each given &amp;lt;source files&amp;gt;.</description></item><item><title>The Clangd Language Server</title><link>https://cesun.info/cxx/clang/clangd/</link><pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/cxx/clang/clangd/</guid><description>Introspect Context A compile_flags.txt at the source root contains build flags that applies to all files in the project, one per line. It is equivalent to clang $FLAGS some_file.cc where $FLAGS are read from this file. This file will be ignored if compile_commands.json is present.
A compile_commands.json file, if present, contains commands to compile each file in the project. See https://clang.llvm.org/docs/JSONCompilationDatabase.html for a specification of this file.
Ideally, build systems should be able to export such information.</description></item></channel></rss>