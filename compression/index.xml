<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Compression on Infinity Architect</title><link>https://cesun.info/compression/</link><description>Recent content in Compression on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 06 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/compression/index.xml" rel="self" type="application/rss+xml"/><item><title>The DEFLATE data format and Gzip archive format</title><link>https://cesun.info/compression/deflate-gzip/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><guid>https://cesun.info/compression/deflate-gzip/</guid><description>DEFLATE DEFLATE is a data format used to store and transmit compressed data. Specifically, it&amp;rsquo;s an abuse to refer to DEFLATE as a compression algorithm.
The DEFLATE data format was designed Phil Katz, for version 2 of his PKZIP archiving tool, and later standardized as the RFC 1951.
The most popular and de-facto standard DEFLATE library is the zlib.
Overview A DEFLATE formatted file consists of a sequence of blocks. Each block is comprised of 2 parts: a description of a Huffman tree, followed by the actual compressed data.</description></item><item><title>Introduction to Huffman Coding</title><link>https://cesun.info/compression/huffman/</link><pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/compression/huffman/</guid><description>A Primer on the Coding Theory An alphabet is a set of symbols, e,g. {a,b,c,d,e}, or whatever symbols you like.
A code on a given alphabet (abbr. code) is an assignment of a bit string to each symbol in the alphabet:
e.g.
{ a -&amp;gt; 1 , b -&amp;gt; 011 , c -&amp;gt; 01110 , d -&amp;gt; 1110 , e -&amp;gt; 10011 } copy The bit string assigned to each symbol (i.</description></item><item><title>Zlib and DEFLATE: A Top-Down Introduction</title><link>https://cesun.info/compression/zlib/</link><pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/compression/zlib/</guid><description>Zlib was authored by Jean-loup Gailly (compression) and Mark Adler (decompression).
Jean-loup is also the primary author of the compression routines of gzip and Info-ZIP&amp;rsquo;s Zip. Mark is also the author of the decompression routines of gzip and Info-ZIP&amp;rsquo;s UnZip. 1# ls -l /usr/lib/libz.* 2-rw-r--r-- 1 root root 130742 Oct 25 08:55 /usr/lib/libz.a 3lrwxrwxrwx 1 root root 11 Oct 25 08:55 /usr/lib/libz.so -&amp;gt; libz.so.1.3 4lrwxrwxrwx 1 root root 11 Oct 25 08:55 /usr/lib/libz.</description></item><item><title>LZ77</title><link>https://cesun.info/compression/lz-family/lz77/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/compression/lz-family/lz77/</guid><description>I recently went through the original paper of LZ77 so it might be a good chance to put down some synopsis and ideas.
LZ77 was proposed in an age when compression algorithms are studied in the name of encoding and decoding processes. Terminologies were aligned with the classic coding theory. See []
The vanilla Ziv Lempel 1977 The following discussion uses notations from the lz77 paper in best effort. Some definitions are re-phrased.</description></item><item><title>The Unix compress(1) utility</title><link>https://cesun.info/compression/unix-compress/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/compression/unix-compress/</guid><description>The compress command appeared in 4.3BSD. It is popular in the 90s.
A compressed file created by the compress command usually have a .Z extension. tar is usually in combined, creating an .tar.Z or .TAZ archive of a directory.
Deflate compression support was added in OpenBSD 2.1.
https://man.openbsd.org/compress</description></item></channel></rss>