<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cryptography on Infinity Architect</title><link>https://cesun.info/crypto/</link><description>Recent content in Cryptography on Infinity Architect</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 20 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cesun.info/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>Cryptograph (unclassified)</title><link>https://cesun.info/crypto/misc/</link><pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/misc/</guid><description>randomart ssh-keygen now prints an ASCII image, after the key is generated. It is safe to spread the image. The image serves as a visual fingerprint, an easier way for humans to validate keys.
There is no industrial standard on how . It&amp;rsquo;s openSSH&amp;rsquo;s own feature.
See http://www.dirk-loss.de/sshvis/drunken_bishop.pdf for an analysis.
The key fingerprint is: SHA256:ee296Fbg/INYE48cv5JxJELqUd4BIcQhXeJVwjoYPCk bitier@bite-into-reality The key&amp;#39;s randomart image is: +--[ED25519 256]--+ | ..==+*+. | | E =oo++.. | | .</description></item><item><title>TLS Certificates</title><link>https://cesun.info/crypto/tls-certificates/</link><pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/tls-certificates/</guid><description>The ASN.1 / DER / PEM / PKCS#7 ASN.1 is a DSL used to define structured data type formally. The
ASN.1 doesn&amp;rsquo;t specify how an instance of structured data type gets serialized.
e.g. is an integer always 4 bytes? Or is it arbitrarily long length-prefixed byte sequence? This is where various *encoding rules* comes in. Distinguished Encoding Rules (DER): TODO PEM: a file format (conventionally named *.pem when stored on filesystem) defined as a sequence of text block, where each block is the base64 result of a single DER-encoded instance of ASN.</description></item><item><title>Specification Makers in Cryptography</title><link>https://cesun.info/crypto/specs/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/specs/</guid><description>ITU-T and X.* ITU (International Telecommunication Union ) is a United Nations affiliated organization.
ITU-T (ITU Telecommunication Standardization Sector) is one if ITU&amp;rsquo;s 3 sub-departments that works on standardization of telecommunications.
ITU-T is further divided into study groups from SG2 to SG20. Those study groups release standard specifications (they call &amp;ldquo;recommendations&amp;rdquo;) identified by &amp;lt;letter&amp;gt;.&amp;lt;number&amp;gt;. For example X means Data networks, open system communications and security, and X.509 identifies a specific document in X series.</description></item><item><title>OpenSSL Suite</title><link>https://cesun.info/crypto/openssl/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/openssl/</guid><description>Glossary Cipher: (for symmetric enc/dec) one block cipher + one mode of operation. e.g. aes-256-cbc.
Cheetsheet Symmetric Enc / Dec 1# enc 2openssl enc -&amp;lt;CIPHER&amp;gt; -pbkdf2 -in &amp;lt;PLAINTEXT_FILE&amp;gt; -out &amp;lt;CIPHERTEXT_FILE&amp;gt; 3 4# dec 5openssl enc -d -&amp;lt;CIPHER&amp;gt; -pbkdf2 -in &amp;lt;CIPHERTEXT_FILE&amp;gt; -out &amp;lt;PLAINTEXT_FILE&amp;gt; copy For a list of supported &amp;lt;CIPHER&amp;gt;:
1# openssl enc -list 2Supported ciphers: 3-aes-128-cbc -aes-128-cfb -aes-128-cfb1 4-aes-128-cfb8 -aes-128-ctr -aes-128-ecb 5-aes-128-ofb -aes-192-cbc -aes-192-cfb 6# etc. copy PK Cert self-sign openssl req -x509 -newkey rsa:2048 -keyout key.</description></item><item><title>Primer Cryptography Math</title><link>https://cesun.info/crypto/math-primer/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/math-primer/</guid><description>Glossary domain: set of possible function input.
range: set of actual output of function, i.e. &amp;lt;range&amp;gt; := {T(x) for all x in domain}
codomain
This term is commonly used in 2 context:
when you want to emphasize the dimensionality of the output space. e.g. we say T(x) = 0 is an R -&amp;gt; R transformation. We say the codomain is R to emphasize the fact that we are not mapping to a 2D vector space, etc.</description></item><item><title>RSA</title><link>https://cesun.info/crypto/rsa/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/rsa/</guid><description>If we can find 3 integers e,d and n such that for all m âˆˆ [0,n), m^e^d % n = m holds,
(i.e. one can pick any m, and get the same m back by raising m^e^d - all under modulo n arithmetic system)
then according to the discrete log hardness assumption (DLHA), it should be computationally infeasible to
recover m by knowing only m^e, e and n. recover d by knowing only e, n and m.</description></item><item><title>Cryptographical Hash Functions</title><link>https://cesun.info/crypto/hash-func/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate><guid>https://cesun.info/crypto/hash-func/</guid><description>&lt;p>This article discusses application of unkeyed cryptographical hash functions.
Some hash functions can take keys, thus creating different output for the same input.&lt;/p>
&lt;!-- See [MAC &amp; HMAC: Keyed Hash Functions]({{/*&lt;ref "./keyed-hash-func.md"*/>}}) for that. -->
&lt;p>See &lt;a href="https://en.wikipedia.org/wiki/HMAC">MAC &amp;amp; HMAC: Keyed Hash Functions&lt;/a> for that.&lt;/p></description></item></channel></rss>